name: prosept_hakaton_8

on:
  push:
    branches:
      - feature/tests

jobs:
  tests:
    name: Testing
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB_TEST }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11
    - name: 'Create env file'
      run: |
        touch .env
        echo DB_HOST=localhost >> .env   
        echo DB_PORT=5432 >> .env
        echo POSTGRES_DB_TEST=${{ secrets.POSTGRES_DB_TEST }} >> .env
        echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
        echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-asyncio httpx pytest-cov
        pip install -r requirements.txt --extra-index-url https://download.pytorch.org/whl/cpu
    - name: Test with flake8
      run: |
        python -m flake8 --ignore E203,E266,E501,E704,W503,B905,B907,W291,F811,E712,E711 --extend-exclude=alembic/versions/, tests/  dir/
    - name: Build coverage file
      run: |
          pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=app tests/ | tee pytest-coverage.txt
    - name: Pytest coverage comment
      uses: MishaKav/pytest-coverage-comment@main
      with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xm

  # build_and_push_to_docker_hub:
  #   name: docker
  #   runs-on: ubuntu-latest
  #   needs: tests
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v2 
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1 
  #     - name: Login to Docker
  #       uses: docker/login-action@v1 
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #     - name: Push to Docker Hub
  #       uses: docker/build-push-action@v2 
  #       with:
  #         context: .
  #         file: ./Dockerfile 
  #         push: true
  #         tags: deamanda/prosept:latest 

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build_and_push_to_docker_hub
  #   steps:
  #     - name: executing remote ssh commands to deploy
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USER }}
  #         key: ${{ secrets.SSH_KEY }}
  #         passphrase: ${{ secrets.PASSPHRASE }}
  #         script: |
  #           sudo docker pull deamanda/prosept:latest
  #           sudo docker-compose stop
  #           sudo docker-compose rm backend
  #           touch .env
  #           echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
  #           echo DB_NAME=${{ secrets.POSTGRES_DB }} >> .env
  #           echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
  #           echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
  #           echo DB_HOST=${{ secrets.DB_HOST }} >> .env
  #           echo DOMAIN=${{ secrets.DOMAIN }} >> .env
  #           echo EMAIL=${{ secrets.EMAIL }} >> .env
  #           echo SECRET=${{ secrets.SECRET }} >> .env
  #           sudo docker-compose up -d 
