"""Migration name

Revision ID: 017866593168
Revises: 905751d6c859
Create Date: 2023-11-30 15:35:30.747439

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "017866593168"
down_revision: Union[str, None] = "905751d6c859"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "productdealerlaters",
        sa.Column("key", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["key"],
            ["dealerprices.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_productdealerlaters_id"),
        "productdealerlaters",
        ["id"],
        unique=False,
    )
    op.create_table(
        "productdealers",
        sa.Column("key", sa.Integer(), nullable=True),
        sa.Column("product_id", sa.Integer(), nullable=True),
        sa.Column("dealer_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("status", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dealer_id"],
            ["dealers.id"],
        ),
        sa.ForeignKeyConstraint(
            ["key"],
            ["dealerprices.id"],
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("key"),
        sa.UniqueConstraint("key", "product_id", "dealer_id"),
    )
    op.create_index(
        op.f("ix_productdealers_id"), "productdealers", ["id"], unique=False
    )
    op.drop_index("ix_productdealerkey_id", table_name="productdealerkey")
    op.drop_table("productdealerkey")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "productdealerkey",
        sa.Column("key", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "product_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "dealer_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("status", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["dealer_id"],
            ["dealers.id"],
            name="productdealerkey_dealer_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["key"], ["dealerprices.id"], name="productdealerkey_key_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
            name="productdealerkey_product_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="productdealerkey_pkey"),
        sa.UniqueConstraint(
            "key",
            "product_id",
            "dealer_id",
            name="productdealerkey_key_product_id_dealer_id_key",
        ),
    )
    op.create_index(
        "ix_productdealerkey_id", "productdealerkey", ["id"], unique=False
    )
    op.drop_index(op.f("ix_productdealers_id"), table_name="productdealers")
    op.drop_table("productdealers")
    op.drop_index(
        op.f("ix_productdealerlaters_id"), table_name="productdealerlaters"
    )
    op.drop_table("productdealerlaters")
    # ### end Alembic commands ###
